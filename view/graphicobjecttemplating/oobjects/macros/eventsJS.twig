{# template pour l'ajout de la gestion des évènements à tout objet #}
{# l'event 'dummy' permet de programmer manuellement un évènement JavaScript sans déclenchement de callback #}

{% for evt, event in events %}
    {% if event is not empty %}
        {% if event.class != "dummy" %}
            $('.{{ objet.id }}').on('{{ evt }}',
            {% if tag is defined and tag is not empty %} '{{ tag }}', {% endif %}
            function (e) {
{#            {% switch(event.class) %}#}
{#            {% case 'javascript:' %}#}
            {% if event.class == 'javascript:' %}
                {{ event.method | raw }};
{#            {% default %}#}
            {% else %}
                let objetDOM = $(this);
                let objet = new {{ objet.object }}(objetDOM);
                var invalid = '';
                if (typeof objet.invalidate === 'function') {
                    invalid = objet.invalidate();
                }
                if (invalid.length == 0) {
                    $(this).remove('has-error');
                    $(this).find('span').removeClass('hidden').addClass('hidden');
                    invokeAjax(objet.getData('{{ evt }}'), '{{ objet.id }}', '{{ evt }}', e);
                } else {
                    $(this).remove('has-error').addClass('has-error');
                    $(this).find('span').removeClass('hidden');
                    $(this).find('span').html(invalid);
                }
{#            {% endswitch %}#}
            {% endif %}
            });
        {% endif %}
    {% endif %}
{% endfor %}
